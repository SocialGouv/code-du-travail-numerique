name: Review

on:
  pull_request:
    branches:
      - "**"
    tags-ignore:
      - v*
  push:
    branches:
      - dev

concurrency:
  cancel-in-progress: true
  group: review-${{ github.ref }}

jobs:
  manifests:
    name: Generate k8s manifests
    runs-on: ubuntu-latest
    steps:
      - name: Install
        shell: bash
        run: |
          yarn add @socialgouv/kosko-charts
      - name: Get k8s infos
        id: k8s
        shell: bash
        run: |
          RAW_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          BRANCH=$(npx @socialgouv/env-slug "${RAW_BRANCH}")
          echo "branch=$(echo ${BRANCH})" >> $GITHUB_OUTPUT
      - name: Use k8s manifests generation
        uses: SocialGouv/actions/k8s-manifests@v1
        with:
          environment: "dev"
          rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
          socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}
        env:
          ELASTIC_APM_ENVIRONMENT: cdtn-${{ steps.k8s.outputs.branch }}
          ES_INDEX_PREFIX: cdtn-preprod

  register-frontend:
    name: Register frontend
    runs-on: ubuntu-latest
    needs: [manifests]
    steps:
      - name: Get commit sha
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Download k8s manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests-dev.yml

      - name: Get deployment url for site
        uses: mikefarah/yq@v4.30.5
        id: url
        with:
          cmd: echo $(cat manifests-dev.yml | yq eval-all '.spec.rules[] .host' - | tail -n 1)

      - name: Get api url for site
        uses: mikefarah/yq@v4.30.5
        id: apiurl
        with:
          cmd: echo $(cat manifests-dev.yml | yq eval-all '.spec.rules[] .host' - | head -n 1)

      - name: Register docker images
        uses: SocialGouv/actions/autodevops-build-register@local-cache-cdtn
        with:
          project: "cdtn"
          imageName: "cdtn/code-du-travail-frontend"
          token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "./Dockerfile"
          dockercontext: "."
          dockerbuildargs: |
              NEXT_PUBLIC_SENTRY_DSN=https://c2aa7e731a494cfd8f7fb1ddabca11c9@sentry.fabrique.social.gouv.fr/5
              NEXT_PUBLIC_SENTRY_ENV=dev
              NEXT_PUBLIC_AZURE_BASE_URL=https://cdtnadmindev.blob.core.windows.net
              NEXT_PUBLIC_AZURE_CONTAINER=cdtn
              NEXT_PUBLIC_PIWIK_SITE_ID=3
              NEXT_PUBLIC_PIWIK_URL=https://matomo.fabrique.social.gouv.fr
              NEXT_PUBLIC_API_ENTREPRISE_URL=https://entreprise.data.gouv.fr/api/sirene
              NEXT_PUBLIC_API_SIRET2IDCC_URL=https://siret2idcc.fabrique.social.gouv.fr/api/v2
              NEXT_PUBLIC_API_URL=https://${{ steps.apiurl.outputs.result }}/api/v1
              NEXT_PUBLIC_COMMIT=${{ env.GITHUB_SHA }}
              NEXT_PUBLIC_SITE_URL=https://${{ steps.url.outputs.result }}

  register-api:
    name: Register api
    runs-on: ubuntu-latest
    steps:
      - name: Register docker images
        uses: SocialGouv/actions/autodevops-build-register@local-cache-cdtn
        with:
          project: "cdtn"
          imageName: "cdtn/code-du-travail-api"
          token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "./packages/code-du-travail-api/Dockerfile"
          dockercontext: "./packages/code-du-travail-api"

  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [ register-frontend, register-api, manifests ]
    steps:
      - name: Use autodevops deployment
        uses: SocialGouv/actions/autodevops-deploy@v1
        with:
          environment: "dev"
          token: ${{ secrets.GITHUB_TOKEN }}
          kubeconfig: ${{ secrets.KUBECONFIG }}
          rancherId: ${{ secrets.RANCHER_PROJECT_ID }}

  e2e:
    name: End-to-end testing
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: |
          yarn install --prefer-offline --frozen-lockfile
      - name: Download k8s manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests-dev.yml
      - name: Get deployment url
        uses: mikefarah/yq@v4.30.5
        id: url
        with:
          cmd: echo $(cat manifests-dev.yml | yq eval-all '.spec.rules[] .host' - | tail -n 1)
      - name: Run test e2e
        run: |
          CODECEPT_BASEURL=https://${{ steps.url.outputs.result }} yarn test:e2e
      - name: Archive generated screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-screenshots
          path: |
            packages/code-du-travail-frontend-e2e/cypress/screenshots
            packages/code-du-travail-frontend-e2e/codecept/output
