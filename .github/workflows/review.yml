name: Review

on:
  pull_request:
    branches:
      - "**"
    tags-ignore:
      - v*

concurrency:
  cancel-in-progress: true
  group: review-${{ github.ref }}

jobs:
  register:
    name: Register images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - images: "code-du-travail-frontend"
            path: "."
            args: |
              NEXT_PUBLIC_SENTRY_DSN=https://c2aa7e731a494cfd8f7fb1ddabca11c9@sentry.fabrique.social.gouv.fr/5
              NEXT_PUBLIC_SENTRY_ENV=dev
          - images: "code-du-travail-api"
            path: "./packages/code-du-travail-api/"
    steps:
      - name: Register docker images
        uses: SocialGouv/actions/autodevops-build-register@local-cache-cdtn
        with:
          project: "cdtn"
          imageName: cdtn/${{ matrix.images }}
          token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "${{ matrix.path }}/Dockerfile"
          dockercontext: "${{ matrix.path }}"
          dockerbuildargs: ${{ matrix.args }}

  manifests:
    name: Generate k8s manifests
    runs-on: ubuntu-latest
    steps:
      - name: Install
        shell: bash
        run: |
          yarn add @socialgouv/kosko-charts
      - name: Get k8s infos
        id: k8s
        shell: bash
        run: |
          RAW_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          BRANCH=$(npx @socialgouv/env-slug "${RAW_BRANCH}")
          echo "::set-output name=branch::$(echo ${BRANCH})"
      - name: Use k8s manifests generation
        uses: SocialGouv/actions/k8s-manifests@v1
        with:
          environment: "dev"
          rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
          socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}
        env:
          ELASTIC_APM_ENVIRONMENT: cdtn-${{ steps.k8s.outputs.branch }}
          ES_INDEX_PREFIX: cdtn-preprod

  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [register, manifests]
    steps:
      - name: Use autodevops deployment
        uses: SocialGouv/actions/autodevops-deploy@v1
        with:
          environment: "dev"
          token: ${{ secrets.GITHUB_TOKEN }}
          kubeconfig: ${{ secrets.KUBECONFIG }}
          rancherId: ${{ secrets.RANCHER_PROJECT_ID }}

  e2e:
    name: End-to-end testing
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: |
          yarn install --prefer-offline --frozen-lockfile
      - name: Download k8s manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests-dev.yml
      - name: Get deployment url
        uses: mikefarah/yq@v4.13.5
        id: url
        with:
          cmd: echo $(cat manifests-dev.yml | yq eval-all '.spec.rules[] .host' - | tail -n 1)
      - name: Run test e2e
        run: |
          CODECEPT_BASEURL=https://${{ steps.url.outputs.result }} yarn test:e2e
