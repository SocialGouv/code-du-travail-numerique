name: Quality tests

on:
  - push

jobs:
  quality:
    name: Quality checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - uses: actions/cache@v2
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # - name: Install deps
      #   run: |
      #     yarn install --prefer-offline --frozen-lockfile

      # - name: Build
      #   run: |
      #     yarn build

      # - name: Lint @cdt/api
      #   run: |
      #     yarn workspace @cdt/api lint

      # - name: Lint socialgouv/cdtn-ui
      #   run: |
      #     yarn workspace @socialgouv/cdtn-ui lint

      # - name: Lint socialgouv/react-fiche-service-public
      #   run: |
      #     yarn workspace @socialgouv/react-fiche-service-public lint

      # - name: Lint cdt/frontend
      #   run: |
      #     yarn workspace @cdt/frontend lint

      # - name: Lint cdt/data
      #   run: |
      #     yarn workspace @cdt/data lint

      - name: Lint Dockerfiles
        uses: docker://hadolint/hadolint:v2.7.0-debian
        run: |
          for i in $(find . -name Dockerfile); do
            echo ""
            echo "[+] hadolint ${i}"
            hadolint ${i}
          done

      - name: Test @cdt/frontend
        run: |
          yarn workspace @cdt/frontend test

      - name: Test @socialgouv/cdtn-ui
        run: |
          yarn workspace @socialgouv/cdtn-ui test

      - name: Test @socialgouv/react-fiche-service-public
        run: |
          yarn workspace @socialgouv/react-fiche-service-public test

      - name: Test SDR urls
        run: |
          jq ".[].url" ./packages/code-du-travail-frontend/src/data/services-de-renseignement.json | xargs -n 1 wget  --spider

# #
# Test @cdtn/api:
#   <<: *quality_stage
#   image:
#     name: $HARBOR_REGISTRY/$HARBOR_PROJECT/cdtn-api:$CI_COMMIT_SHA
#     entrypoint: [""]
#   before_script:
#     - cd /app
#   needs:
#     - Register elasticsearch image
#     - Register frontend image
#   services:
#     - name: $HARBOR_REGISTRY/$HARBOR_PROJECT/cdtn-elasticsearch:$CI_COMMIT_SHA
#       alias: elasticsearch
#       command:
#         [
#           "bin/elasticsearch",
#           "-Expack.security.enabled=false",
#           "-Ediscovery.type=single-node",
#         ]
#   variables:
#     GIT_STRATEGY: none
#     ELASTICSEARCH_URL: http://elasticsearch:$ELASTICSEARCH_PORT
#     # HACK(douglasduteil): make ES not that memory hungry
#     ES_JAVA_OPTS: "-Xms256m -Xmx256m"
#   script:
#     # NOTE(douglasduteil): the elasticsearch health check must be last
#     # As we block the job waiting for elasticsearch to be up.
#     - |-
#       echo "connecting to $HARBOR_REGISTRY/$HARBOR_PROJECT/cdtn-elasticsearch:$CI_COMMIT_SHA";
#       echo $ELASTICSEARCH_URL;
#       retry=60;
#       while
#         ! curl -sS "$ELASTICSEARCH_URL/_cat/health?h=status" &&
#         [[ $(( retry-- )) -gt 0 ]];
#       do echo "Waiting for Elasticsearch to go Green ($retry)" ; sleep 1 ; done ;
#       [ "$retry" -eq "-1" ] && exit 1
#     #
#     - yarn test --coverage
