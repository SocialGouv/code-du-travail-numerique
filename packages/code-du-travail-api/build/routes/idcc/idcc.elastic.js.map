{"version":3,"sources":["../../../src/routes/idcc/idcc.elastic.js"],"sourcesContent":["const { SOURCES } = require(\"@socialgouv/cdtn-sources\");\n\nfunction getIdccBody({ query, idccQuery }) {\n  return {\n    _source: [\n      \"id\",\n      \"title\",\n      \"shortTitle\",\n      \"url\",\n      \"num\",\n      \"slug\",\n      \"effectif\",\n      \"cdtnId\",\n      \"highlight\",\n    ],\n    query: {\n      bool: {\n        filter: [\n          { term: { source: SOURCES.CCN } },\n          { term: { isPublished: true } },\n        ],\n        must: {\n          bool: {\n            should: [\n              // in case of idcc search, we want to boost exact match\n              idccQuery\n                ? {\n                    term: {\n                      num: {\n                        boost: 10,\n                        value: idccQuery,\n                      },\n                    },\n                  }\n                : undefined,\n              {\n                match: {\n                  \"shortTitle.french\": {\n                    boost: \".9\",\n                    fuzziness: \"1\",\n                    query: `${query}`,\n                  },\n                },\n              },\n              {\n                match_phrase_prefix: {\n                  \"num.text\": {\n                    query: `${query}`,\n                  },\n                },\n              },\n              {\n                match_phrase_prefix: {\n                  \"synonymes.french\": {\n                    query: `${query}`,\n                  },\n                },\n              },\n              {\n                match_phrase_prefix: {\n                  \"title.french\": {\n                    query: `${query}`,\n                  },\n                },\n              },\n            ],\n          },\n        },\n        should: {\n          rank_feature: {\n            field: \"effectif\",\n            log: {\n              scaling_factor: 1,\n            },\n          },\n        },\n      },\n    },\n    size: 50,\n  };\n}\nmodule.exports = getIdccBody;\n"],"names":["SOURCES","require","getIdccBody","query","idccQuery","_source","bool","filter","term","source","CCN","isPublished","must","should","num","boost","value","undefined","match","fuzziness","match_phrase_prefix","rank_feature","field","log","scaling_factor","size","module","exports"],"mappings":"AAAA,MAAM,EAAEA,QAAO,EAAE,GAAGC,QAAQ;AAE5B,SAASC,YAAY,EAAEC,MAAK,EAAEC,UAAS,EAAE,EAAE;IACzC,OAAO;QACLC,SAAS;YACP;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACDF,OAAO;YACLG,MAAM;gBACJC,QAAQ;oBACN;wBAAEC,MAAM;4BAAEC,QAAQT,QAAQU,GAAG;wBAAC;oBAAE;oBAChC;wBAAEF,MAAM;4BAAEG,aAAa,IAAI;wBAAC;oBAAE;iBAC/B;gBACDC,MAAM;oBACJN,MAAM;wBACJO,QAAQ;4BACN,uDAAuD;4BACvDT,YACI;gCACEI,MAAM;oCACJM,KAAK;wCACHC,OAAO;wCACPC,OAAOZ;oCACT;gCACF;4BACF,IACAa,SAAS;4BACb;gCACEC,OAAO;oCACL,qBAAqB;wCACnBH,OAAO;wCACPI,WAAW;wCACXhB,OAAO,CAAC,EAAEA,MAAM,CAAC;oCACnB;gCACF;4BACF;4BACA;gCACEiB,qBAAqB;oCACnB,YAAY;wCACVjB,OAAO,CAAC,EAAEA,MAAM,CAAC;oCACnB;gCACF;4BACF;4BACA;gCACEiB,qBAAqB;oCACnB,oBAAoB;wCAClBjB,OAAO,CAAC,EAAEA,MAAM,CAAC;oCACnB;gCACF;4BACF;4BACA;gCACEiB,qBAAqB;oCACnB,gBAAgB;wCACdjB,OAAO,CAAC,EAAEA,MAAM,CAAC;oCACnB;gCACF;4BACF;yBACD;oBACH;gBACF;gBACAU,QAAQ;oBACNQ,cAAc;wBACZC,OAAO;wBACPC,KAAK;4BACHC,gBAAgB;wBAClB;oBACF;gBACF;YACF;QACF;QACAC,MAAM;IACR;AACF;AACAC,OAAOC,OAAO,GAAGzB"}