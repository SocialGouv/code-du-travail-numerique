{"version":3,"sources":["../../../src/routes/modeles/index.js"],"sourcesContent":["import elasticsearchClient from \"../../conf/elasticsearch\";\nimport { API_BASE_URL, CDTN_ADMIN_VERSION } from \"../v1.prefix\";\n\nconst Router = require(\"koa-router\");\nconst { DOCUMENTS } = require(\"@socialgouv/cdtn-elasticsearch\");\nconst getModeleBody = require(\"./searchModele.elastic\");\n\nconst ES_INDEX_PREFIX = process.env.ES_INDEX_PREFIX || \"cdtn\";\nconst index = `${ES_INDEX_PREFIX}-${CDTN_ADMIN_VERSION}_${DOCUMENTS}`;\n\nconst router = new Router({ prefix: API_BASE_URL });\n\n/**\n * Return documents matching the given query.\n *\n * @example\n * http://localhost:1337/api/v1/suggest?q=incapacitÃ©%20travail\n *\n * @param {string} querystring.q A `q` querystring param containing the query to process.\n * @param {string} querystring.excludeSources A `excludeSources` querystring param containing the sources (comma separatied list) to exclude from the results\n * @returns {Object} Results.\n */\nrouter.get(\"/modeles\", async (ctx) => {\n  const body = getModeleBody();\n  const response = await elasticsearchClient.search({ body, index });\n  if (response.body.hits.total.value > 0) {\n    ctx.body = response.body.hits.hits.map(({ _source }) => _source);\n  } else {\n    ctx.body = [];\n  }\n});\n\nexport default router;\n"],"names":["elasticsearchClient","API_BASE_URL","CDTN_ADMIN_VERSION","Router","require","DOCUMENTS","getModeleBody","ES_INDEX_PREFIX","process","env","index","router","prefix","get","ctx","body","response","search","hits","total","value","map","_source"],"mappings":"AAAA,OAAOA,yBAAyB,2BAA2B;AAC3D,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,eAAe;AAEhE,MAAMC,SAASC,QAAQ;AACvB,MAAM,EAAEC,UAAS,EAAE,GAAGD,QAAQ;AAC9B,MAAME,gBAAgBF,QAAQ;AAE9B,MAAMG,kBAAkBC,QAAQC,GAAG,CAACF,eAAe,IAAI;AACvD,MAAMG,QAAQ,CAAC,EAAEH,gBAAgB,CAAC,EAAEL,mBAAmB,CAAC,EAAEG,UAAU,CAAC;AAErE,MAAMM,SAAS,IAAIR,OAAO;IAAES,QAAQX;AAAa;AAEjD;;;;;;;;;CASC,GACDU,OAAOE,GAAG,CAAC,YAAY,OAAOC,MAAQ;IACpC,MAAMC,OAAOT;IACb,MAAMU,WAAW,MAAMhB,oBAAoBiB,MAAM,CAAC;QAAEF;QAAML;IAAM;IAChE,IAAIM,SAASD,IAAI,CAACG,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,GAAG;QACtCN,IAAIC,IAAI,GAAGC,SAASD,IAAI,CAACG,IAAI,CAACA,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEC,QAAO,EAAE,GAAKA;IAC1D,OAAO;QACLR,IAAIC,IAAI,GAAG,EAAE;IACf,CAAC;AACH;AAEA,eAAeJ,OAAO"}