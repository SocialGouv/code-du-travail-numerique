{"version":3,"sources":["../../../src/routes/search/search.sem.js"],"sourcesContent":["const sourcesFilter = require(\"./sourcesFilter.elastic\");\n\nfunction getSemQuery({ query_vector, size, sources = [] }) {\n  if (sources.length === 0) {\n    throw new Error(\"[getSemQuery] sources should not be empty\");\n  }\n  return {\n    _source: [\n      \"title\",\n      \"source\",\n      \"slug\",\n      \"description\",\n      \"url\",\n      \"action\",\n      \"breadcrumbs\",\n      \"cdtnId\",\n      \"highlight\",\n    ],\n    query: {\n      script_score: {\n        query: {\n          bool: {\n            filter: [\n              { term: { excludeFromSearch: false } },\n              { term: { isPublished: true } },\n              sourcesFilter(sources),\n            ],\n          },\n        },\n        script: {\n          params: { query_vector: query_vector },\n          source: \"cosineSimilarity(params.query_vector, 'title_vector') + 1.0\",\n        },\n      },\n    },\n    size: size,\n  };\n}\n\nmodule.exports = getSemQuery;\n"],"names":["sourcesFilter","require","getSemQuery","query_vector","size","sources","length","Error","_source","query","script_score","bool","filter","term","excludeFromSearch","isPublished","script","params","source","module","exports"],"mappings":"AAAA,MAAMA,gBAAgBC,QAAQ;AAE9B,SAASC,YAAY,EAAEC,aAAY,EAAEC,KAAI,EAAEC,SAAU,EAAE,CAAA,EAAE,EAAE;IACzD,IAAIA,QAAQC,MAAM,KAAK,GAAG;QACxB,MAAM,IAAIC,MAAM,6CAA6C;IAC/D,CAAC;IACD,OAAO;QACLC,SAAS;YACP;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACDC,OAAO;YACLC,cAAc;gBACZD,OAAO;oBACLE,MAAM;wBACJC,QAAQ;4BACN;gCAAEC,MAAM;oCAAEC,mBAAmB,KAAK;gCAAC;4BAAE;4BACrC;gCAAED,MAAM;oCAAEE,aAAa,IAAI;gCAAC;4BAAE;4BAC9Bf,cAAcK;yBACf;oBACH;gBACF;gBACAW,QAAQ;oBACNC,QAAQ;wBAAEd,cAAcA;oBAAa;oBACrCe,QAAQ;gBACV;YACF;QACF;QACAd,MAAMA;IACR;AACF;AAEAe,OAAOC,OAAO,GAAGlB"}