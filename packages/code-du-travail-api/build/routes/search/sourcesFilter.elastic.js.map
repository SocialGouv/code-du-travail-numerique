{"version":3,"sources":["../../../src/routes/search/sourcesFilter.elastic.js"],"sourcesContent":["const { SOURCES } = require(\"@socialgouv/cdtn-sources\");\n\n// if convention collectives are required\n// we only return the one with contributions\nconst sourcesFilter = (sources) =>\n  sources.includes(SOURCES.CCN)\n    ? {\n        bool: {\n          should: [\n            // contents other than CCN\n            // we want a boost here to avoid noise from CCNs\n            {\n              terms: {\n                boost: 30,\n                source: sources.filter((s) => s != SOURCES.CCN),\n              },\n            },\n            // OR ( CCN source AND contributions )\n            {\n              bool: {\n                must: [\n                  { term: { source: SOURCES.CCN } },\n                  { term: { contributions: true } },\n                  {\n                    rank_feature: {\n                      boost: 10,\n                      field: \"effectif\",\n                    },\n                  },\n                ],\n              },\n            },\n          ],\n        },\n      }\n    : { terms: { source: sources } };\n\nmodule.exports = sourcesFilter;\n"],"names":["SOURCES","require","sourcesFilter","sources","includes","CCN","bool","should","terms","boost","source","filter","s","must","term","contributions","rank_feature","field","module","exports"],"mappings":"AAAA,MAAM,EAAEA,QAAO,EAAE,GAAGC,QAAQ;AAE5B,yCAAyC;AACzC,4CAA4C;AAC5C,MAAMC,gBAAgB,CAACC,UACrBA,QAAQC,QAAQ,CAACJ,QAAQK,GAAG,IACxB;QACEC,MAAM;YACJC,QAAQ;gBACN,0BAA0B;gBAC1B,gDAAgD;gBAChD;oBACEC,OAAO;wBACLC,OAAO;wBACPC,QAAQP,QAAQQ,MAAM,CAAC,CAACC,IAAMA,KAAKZ,QAAQK,GAAG;oBAChD;gBACF;gBACA,sCAAsC;gBACtC;oBACEC,MAAM;wBACJO,MAAM;4BACJ;gCAAEC,MAAM;oCAAEJ,QAAQV,QAAQK,GAAG;gCAAC;4BAAE;4BAChC;gCAAES,MAAM;oCAAEC,eAAe,IAAI;gCAAC;4BAAE;4BAChC;gCACEC,cAAc;oCACZP,OAAO;oCACPQ,OAAO;gCACT;4BACF;yBACD;oBACH;gBACF;aACD;QACH;IACF,IACA;QAAET,OAAO;YAAEE,QAAQP;QAAQ;IAAE,CAAC;AAEpCe,OAAOC,OAAO,GAAGjB"}