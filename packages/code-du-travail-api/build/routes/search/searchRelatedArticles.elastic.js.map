{"version":3,"sources":["../../../src/routes/search/searchRelatedArticles.elastic.js"],"sourcesContent":["const { SOURCES } = require(\"@socialgouv/cdtn-sources\");\n\nfunction getRelatedArticlesBody({ query, size = 5 }) {\n  return {\n    _source: [\"title\", \"slug\", \"url\", \"source\", \"description\", \"cdtnId\"],\n    query: {\n      bool: {\n        filter: [\n          { term: { source: `${SOURCES.CDT}` } },\n          { term: { isPublished: true } },\n        ],\n        must: {\n          bool: {\n            should: [\n              {\n                multi_match: {\n                  boost: 0.1,\n                  fields: [\"text.french\", \"title.french\"],\n                  minimum_should_match: \"1<99% 3<75% 6<30%\",\n                  query: query,\n                  type: \"cross_fields\",\n                },\n              },\n              {\n                match: {\n                  \"title.article_id\": {\n                    boost: 3,\n                    query: query,\n                  },\n                },\n              },\n              {\n                match: {\n                  \"text.french_with_synonyms\": {\n                    query: query,\n                  },\n                },\n              },\n            ],\n          },\n        },\n        should: [\n          {\n            match_phrase: {\n              \"title.french\": {\n                boost: 2,\n                query: `__start__ ${query}`,\n                slop: 1,\n              },\n            },\n          },\n          {\n            match_phrase: {\n              \"text.french\": {\n                boost: 1.5,\n                query: query,\n              },\n            },\n          },\n          {\n            match: {\n              \"title.french_with_synonyms\": {\n                query: query,\n              },\n            },\n          },\n        ],\n      },\n    },\n    size,\n  };\n}\n\nmodule.exports = getRelatedArticlesBody;\n"],"names":["SOURCES","require","getRelatedArticlesBody","query","size","_source","bool","filter","term","source","CDT","isPublished","must","should","multi_match","boost","fields","minimum_should_match","type","match","match_phrase","slop","module","exports"],"mappings":"AAAA,MAAM,EAAEA,QAAO,EAAE,GAAGC,QAAQ;AAE5B,SAASC,uBAAuB,EAAEC,MAAK,EAAEC,MAAO,EAAC,EAAE,EAAE;IACnD,OAAO;QACLC,SAAS;YAAC;YAAS;YAAQ;YAAO;YAAU;YAAe;SAAS;QACpEF,OAAO;YACLG,MAAM;gBACJC,QAAQ;oBACN;wBAAEC,MAAM;4BAAEC,QAAQ,CAAC,EAAET,QAAQU,GAAG,CAAC,CAAC;wBAAC;oBAAE;oBACrC;wBAAEF,MAAM;4BAAEG,aAAa,IAAI;wBAAC;oBAAE;iBAC/B;gBACDC,MAAM;oBACJN,MAAM;wBACJO,QAAQ;4BACN;gCACEC,aAAa;oCACXC,OAAO;oCACPC,QAAQ;wCAAC;wCAAe;qCAAe;oCACvCC,sBAAsB;oCACtBd,OAAOA;oCACPe,MAAM;gCACR;4BACF;4BACA;gCACEC,OAAO;oCACL,oBAAoB;wCAClBJ,OAAO;wCACPZ,OAAOA;oCACT;gCACF;4BACF;4BACA;gCACEgB,OAAO;oCACL,6BAA6B;wCAC3BhB,OAAOA;oCACT;gCACF;4BACF;yBACD;oBACH;gBACF;gBACAU,QAAQ;oBACN;wBACEO,cAAc;4BACZ,gBAAgB;gCACdL,OAAO;gCACPZ,OAAO,CAAC,UAAU,EAAEA,MAAM,CAAC;gCAC3BkB,MAAM;4BACR;wBACF;oBACF;oBACA;wBACED,cAAc;4BACZ,eAAe;gCACbL,OAAO;gCACPZ,OAAOA;4BACT;wBACF;oBACF;oBACA;wBACEgB,OAAO;4BACL,8BAA8B;gCAC5BhB,OAAOA;4BACT;wBACF;oBACF;iBACD;YACH;QACF;QACAC;IACF;AACF;AAEAkB,OAAOC,OAAO,GAAGrB"}