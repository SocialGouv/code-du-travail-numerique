
worker_processes                auto; # it will be determinate automatically by the number of core

error_log                       /var/log/nginx/error.log warn;

events {
  worker_connections          1024;
}


http {
  server_tokens off;
  absolute_redirect           off;
  access_log                  /var/log/nginx/access.log;
  default_type                application/octet-stream;
  error_log                   /var/log/nginx/error.log;
  include                     /etc/nginx/mime.types;
  keepalive_timeout           3000;
  sendfile                    on;

  # Declare a cache named static-cache
  proxy_cache_path     /tmp/nginx-cache levels=1:2 keys_zone=static-cache:10m max_size=100m inactive=7d use_temp_path=off;
  proxy_cache_key       $scheme$proxy_host$request_uri;
  proxy_cache_lock      on;
  proxy_cache_background_update on;
  proxy_cache_use_stale error timeout updating http_404 http_500 http_502 http_503 http_504;
  proxy_cache_bypass    $http_x_purge;

  upstream nextjs_upstream {
    server app;
  }

  server {
    listen                  8080;
    root                    /usr/share/nginx/html;
    index                   index.html;
    server_name_in_redirect on;

    charset utf-8;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/css application/json application/javascript application/x-javascript text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    client_max_body_size    32m;
    error_page              500 502 503 504  /50x.html;
    error_page              404              /404.html;

    recursive_error_pages on;

    #----------
    location /_next/static {
      proxy_cache static-cache;
      proxy_pass http://nextjs_upstream;
      add_header X-Cache-Status $upstream_cache_status;
    }

    location ~* ^/404\.html$ {
      # enable userland 404
      try_files /404.html /404/index.html
      error_page 404 = @error404;
    }

    location @error404 {
      root                /usr/share/nginx/errors/;
    }
    location /50x.html {
      root                /var/lib/nginx/html;
    }

    # From zero downtime deployment use in base nginx image
    location /live {
      default_type text/plain;
      return 200 'OK';
    }

    include /etc/nginx/ready_response.conf;
    location /ready {
        default_type text/plain;
        if ($ready_response = 'OK') {
            return 200 $ready_response;
        }
        return 500 'Not Ready';
    }

    location / {
      proxy_cache static-cache;
      proxy_ignore_headers Cache-Control;
      proxy_ignore_headers Set-Cookie;
      proxy_cache_valid 24h;
      proxy_buffering   on;
      proxy_pass http://nextjs_upstream;
      add_header X-Cache-Status $upstream_cache_status;
    }
  }
}
